AWSTemplateFormatVersion: '2010-09-09'
Description: 'Infraestructura para el Sistema de Gestión de Espacios Hospitalarios'

Parameters:
  Environment:
    Type: String
    Default: dev
    AllowedValues:
      - dev
      - staging
      - prod
    Description: Entorno de despliegue

  DomainName:
    Type: String
    Default: hospital-espacios.example.com
    Description: Nombre de dominio para el frontend

Resources:
  # S3 bucket para el frontend
  FrontendBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub 'hospital-espacios-frontend-${Environment}'
      AccessControl: Private
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: 404.html
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: HospitalEspacios

  # Política de bucket para permitir acceso a CloudFront
  FrontendBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref FrontendBucket
      PolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: cloudfront.amazonaws.com
            Action: s3:GetObject
            Resource: !Sub "${FrontendBucket.Arn}/*"
            Condition:
              StringEquals:
                AWS:SourceArn: !Sub "arn:aws:cloudfront::${AWS::AccountId}:distribution/${CloudFrontDistribution}"

  # CloudFront para distribución del frontend
  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Origins:
          - DomainName: !Sub "${FrontendBucket.RegionalDomainName}"
            Id: S3Origin
            S3OriginConfig:
              OriginAccessIdentity: ''
            OriginAccessControlId: !GetAtt CloudFrontOriginAccessControl.Id
        DefaultRootObject: index.html
        Enabled: true
        HttpVersion: http2
        PriceClass: PriceClass_100
        ViewerCertificate:
          CloudFrontDefaultCertificate: true
        DefaultCacheBehavior:
          AllowedMethods:
            - GET
            - HEAD
            - OPTIONS
          CachedMethods:
            - GET
            - HEAD
            - OPTIONS
          Compress: true
          DefaultTTL: 3600
          ForwardedValues:
            QueryString: true
            Cookies:
              Forward: none
          TargetOriginId: S3Origin
          ViewerProtocolPolicy: redirect-to-https
        CustomErrorResponses:
          - ErrorCode: 403
            ResponseCode: 200
            ResponsePagePath: /index.html
          - ErrorCode: 404
            ResponseCode: 200
            ResponsePagePath: /index.html
        Tags:
          - Key: Environment
            Value: !Ref Environment
          - Key: Project
            Value: HospitalEspacios

  # CloudFront OAC (Origin Access Control)
  CloudFrontOriginAccessControl:
    Type: AWS::CloudFront::OriginAccessControl
    Properties:
      OriginAccessControlConfig:
        Name: !Sub "OAC-${FrontendBucket}"
        OriginAccessControlOriginType: s3
        SigningBehavior: always
        SigningProtocol: sigv4

  # DynamoDB para almacenamiento de datos
  EspaciosTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub 'hospital-espacios-${Environment}'
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
        - AttributeName: tipo
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      GlobalSecondaryIndexes:
        - IndexName: TipoIndex
          KeySchema:
            - AttributeName: tipo
              KeyType: HASH
          Projection:
            ProjectionType: ALL
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: HospitalEspacios

  # DynamoDB para conexiones WebSocket
  WebSocketConnectionsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub 'hospital-ws-connections-${Environment}'
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: connectionId
          AttributeType: S
      KeySchema:
        - AttributeName: connectionId
          KeyType: HASH
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: HospitalEspacios

  # Rol IAM para las funciones Lambda
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub 'hospital-lambda-role-${Environment}'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: DynamoDBAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:GetItem
                  - dynamodb:PutItem
                  - dynamodb:UpdateItem
                  - dynamodb:DeleteItem
                  - dynamodb:Query
                  - dynamodb:Scan
                Resource:
                  - !GetAtt EspaciosTable.Arn
                  - !GetAtt WebSocketConnectionsTable.Arn
        - PolicyName: APIGatewayManagement
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - execute-api:ManageConnections
                Resource: !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:*/*"

Outputs:
  FrontendBucketName:
    Description: Nombre del bucket S3 para el frontend
    Value: !Ref FrontendBucket
    Export:
      Name: !Sub "${AWS::StackName}-FrontendBucketName"

  CloudFrontDistributionId:
    Description: ID de la distribución CloudFront
    Value: !Ref CloudFrontDistribution
    Export:
      Name: !Sub "${AWS::StackName}-CloudFrontDistributionId"

  CloudFrontDomainName:
    Description: Nombre de dominio de la distribución CloudFront
    Value: !GetAtt CloudFrontDistribution.DomainName
    Export:
      Name: !Sub "${AWS::StackName}-CloudFrontDomainName"

  EspaciosTableName:
    Description: Nombre de la tabla DynamoDB para espacios
    Value: !Ref EspaciosTable
    Export:
      Name: !Sub "${AWS::StackName}-EspaciosTableName"

  WebSocketConnectionsTableName:
    Description: Nombre de la tabla DynamoDB para conexiones WebSocket
    Value: !Ref WebSocketConnectionsTable
    Export:
      Name: !Sub "${AWS::StackName}-WebSocketConnectionsTableName"

  LambdaRoleName:
    Description: Nombre del rol IAM para funciones Lambda
    Value: !Ref LambdaExecutionRole
    Export:
      Name: !Sub "${AWS::StackName}-LambdaRoleName"